---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatbot-galactica
  namespace: chatbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chatbot-galactica
  template:
    metadata:
      labels:
        app: chatbot-galactica
    spec:
      runtimeClassName: nvidia
      nodeSelector:
        kubernetes.io/hostname: galactica
      containers:
      - name: chatbot
        image: registry.gyant.internal/chatbot:latest
        imagePullPolicy: Always
        command: ["sleep", "infinity"]
        ports:
        - containerPort: 7860
          name: http
        resources:
          limits:
            nvidia.com/gpu: 1
          requests:
            nvidia.com/gpu: 1
        volumeMounts:
        - name: models-volume
          mountPath: /data/models
          readOnly: true
      volumes:
      - name: models-volume
        persistentVolumeClaim:
          claimName: models-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: chatbot-galactica
  namespace: chatbot
spec:
  type: ClusterIP
  ports:
  - port: 7860
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: chatbot-galactica
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: chatbot-galactica-cert
  namespace: chatbot
spec:
  secretName: chatbot-galactica-tls
  issuerRef:
    name: ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io
  dnsNames:
  - chatbot-galactica.gyant.internal
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chatbot-galactica
  namespace: chatbot
  annotations:
    kubernetes.io/ingress.class: traefik  # Changed from nginx to traefik
spec:
  tls:
  - hosts:
    - chatbot-galactica.gyant.internal
    secretName: chatbot-galactica-tls
  rules:
  - host: chatbot-galactica.gyant.internal
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: chatbot-galactica
            port:
              number: 7860
